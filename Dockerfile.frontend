# 前端服务 Dockerfile
# 第一阶段：构建阶段
FROM node:20-slim as builder

# 配置 Debian 使用中国镜像源
RUN sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list.d/debian.sources

# 配置 npm 使用淘宝镜像源并安装 pnpm
RUN npm config set registry https://registry.npmmirror.com && \
    npm install -g pnpm && \
    pnpm config set registry https://registry.npmmirror.com

# 设置工作目录
WORKDIR /app

# 复制 package 文件
COPY frontend/package*.json ./
COPY frontend/pnpm-lock.yaml ./

# 安装依赖
RUN pnpm install

# 复制源代码
COPY frontend/ .

# 构建应用
RUN pnpm run build

# 第二阶段：生产阶段
FROM nginx:alpine

# 复制构建产物到 nginx 目录
COPY --from=builder /app/dist /usr/share/nginx/html

# 创建必要的目录并设置权限
RUN mkdir -p /var/cache/nginx/client_temp /var/cache/nginx/proxy_temp /var/cache/nginx/fastcgi_temp /var/cache/nginx/uwsgi_temp /var/cache/nginx/scgi_temp /var/run && \
    chown -R nginx:nginx /usr/share/nginx/html /var/cache/nginx /var/run && \
    chmod -R 755 /var/cache/nginx

# 暴露端口
EXPOSE 80

# 启动 nginx (以 root 用户运行以避免权限问题)
CMD ["nginx", "-g", "daemon off;"]